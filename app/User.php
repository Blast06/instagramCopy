<?php

namespace App;

use App\Mail\NewUserWelcomeMail;
use Illuminate\Notifications\Notifiable;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Storage;

class User extends Authenticatable
{
    use Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name', 'email', 'password', 'username'
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    //cambiar la ruta; poner el username en vez del id
    public function getRouteKeyName()
    {
        return 'username';
    }

    // Evento que se activa al momento de crear un user
    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created(function ($user){
            $user->profile()->create([
                'title' => $user->username,
                'description' => 'No description provided, update your profile',
            ]);

            // Enviar email a usuario registrado
            Mail::to($user->email)->send(new NewUserWelcomeMail());
        });
    }

    //Usuario tiene muchos posts
    public function posts()
    {
        return $this->hasMany(Post::class)->orderBy('created_at', 'DESC');
    }

    // relacion de muchos a muchos de seguidores
    public function following()
    {
        return $this->belongsToMany(Profile::class);
    }


    //usuario tiene un solo profile
    public function profile()
    {
        return $this->hasOne(Profile::class);
    }

}
